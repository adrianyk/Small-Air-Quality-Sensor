#include <TinyGPS++.h>
#include <HardwareSerial.h>

TinyGPSPlus gps;
HardwareSerial gpsSerial(2);  // UART2 (GPIO16 RX, GPIO17 TX)
uint32_t timer_ave = millis();
void setup() {
  Serial.begin(115200);
  gpsSerial.begin(9600, SERIAL_8N1, 16, 17);  // GPS baud, RX, TX
  timer_ave = millis();

  Serial.println("NEO-M8U GPS test: getting date, time, and location");
}

void loop() {
  if (gpsSerial.available() > 0) {
    if (millis()-timer_ave>1000){
    Serial.println("Fix found");
    for(int i=0; i<20; i++){
      gps.encode(gpsSerial.read());}

    
      Serial.println("----- GPS DATA -----");

        // 🕒 Date and Time (UTC)
        if (gps.date.isValid() && gps.time.isValid()) {
          Serial.print("Date (UTC): ");
          Serial.print(gps.date.day());
          Serial.print("/");
          Serial.print(gps.date.month());
          Serial.print("/");
          Serial.println(gps.date.year());

          Serial.print("Time (UTC): ");
          Serial.print(gps.time.hour());
          Serial.print(":");
          Serial.print(gps.time.minute());
          Serial.print(":");
          Serial.println(gps.time.second());
        } else {
          Serial.println("Date/Time not valid yet.");
        }

        // 📍 Location
        if (gps.location.isValid()) {
          Serial.print("Latitude: ");
          Serial.println(gps.location.lat(), 6);  // 6 decimal places (~10 cm)
          Serial.print("Longitude: ");
          Serial.println(gps.location.lng(), 6);
        } else {
          Serial.println("Location not valid yet.");
        }

        // 🛰️ Satellite info
        Serial.print("Satellites: ");
        Serial.println(gps.satellites.value());

        // 🚗 Speed
        Serial.print("Speed (km/h): ");
        Serial.println(gps.speed.kmph());

        Serial.println("--------------------\n");
      
      timer_ave = millis();
    }
  }
  else{
    if (millis()-timer_ave>1000){
    Serial.println("Fix not found");
    timer_ave = millis();
    }

  }
}
